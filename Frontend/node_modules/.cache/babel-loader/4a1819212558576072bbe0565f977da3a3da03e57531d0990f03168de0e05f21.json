{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas Pereira\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\DEV\\\\Profiss\\xE3o Programador\\\\Projeto Youtube\\\\youtube\\\\src\\\\contexts\\\\userContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserStorage = ({\n  children\n}) => {\n  _s();\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState({});\n  const getUser = () => {\n    api.get('/user/get-user').then(() => {}).catch(() => {});\n  };\n  const handleLogin = (email, password) => {\n    api.post('/user/sign-in', {\n      email,\n      password\n    }).then(({\n      data\n    }) => {\n      setLogin(true);\n      // puxar os dados do usuário\n      localStorage.setItem('token', data.token);\n    }).catch(error => {\n      console.log('Não foi possível fazer o login');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      login,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserStorage, \"zgHyGMCBtk3wVRddURm0MqEs/BM=\");\n_c = UserStorage;\nvar _c;\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"names":["createContext","useState","api","jsxDEV","_jsxDEV","UserContext","UserStorage","children","_s","login","setLogin","user","setUser","getUser","get","then","catch","handleLogin","email","password","post","data","localStorage","setItem","token","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lucas Pereira/OneDrive/Área de Trabalho/DEV/Profissão Programador/Projeto Youtube/youtube/src/contexts/userContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nexport const UserContext = createContext({} as any);\r\n\r\nexport const UserStorage = ({ children }: any) => {\r\n  const [login, setLogin] = useState(false);\r\n  const [user, setUser] = useState({});\r\n\r\n  const getUser = () => {\r\n    api.get('/user/get-user').then(() => {\r\n\r\n    }).catch(() => {\r\n      \r\n    })\r\n  };\r\n\r\n  const handleLogin = (email: string, password:string) => {\r\n    api.post('/user/sign-in', {email, password}).then(({ data }) => {\r\n      setLogin(true);\r\n      // puxar os dados do usuário\r\n      localStorage.setItem('token', data.token)\r\n    }).catch((error) => {\r\n      console.log('Não foi possível fazer o login');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{\r\n      login,\r\n      user\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAaC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC,CAAQ,CAAC;AAEnD,OAAO,MAAMM,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpBX,GAAG,CAACY,GAAG,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC,MAAM,CAErC,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAEf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,KAAa,EAAEC,QAAe,KAAK;IACtDjB,GAAG,CAACkB,IAAI,CAAC,eAAe,EAAE;MAACF,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;MAAEM;IAAK,CAAC,KAAK;MAC9DX,QAAQ,CAAC,IAAI,CAAC;MACd;MACAY,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;IAC3C,CAAC,CAAC,CAACR,KAAK,CAAES,KAAK,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC3BpB,KAAK;MACLE;IACF,CAAE;IAAAJ,QAAA,EACCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAAzB,EAAA,CA9BYF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}